name: Crowdsource Appfilter

on:
  workflow_dispatch:

env:
  REMOTE_APPFILTER_URLS: '["https://raw.githubusercontent.com/LawnchairLauncher/lawnicons/refs/heads/develop/app/assets/appfilter.xml","https://raw.githubusercontent.com/Delta-Icons/android/refs/heads/master/app/src/main/assets/appfilter.xml"]'
  PACKAGE_BLACKLIST_PATH: .github/workflows/crowdsource_appfilter/blacklists/packageblacklist.txt      # The path to the package blacklist file, change if necessary
  DRAWABLE_BLACKLIST_PATH: .github/workflows/crowdsource_appfilter/blacklists/drawableblacklist.txt    # The path to the drawable blacklist file, change if necessary
  COMPONENT_BLACKLIST_PATH: .github/workflows/crowdsource_appfilter/blacklists/componentblacklist.txt  # The path to the component blacklist file, change if necessary
  APPFILTER_PATH: newicons/appfilter.xml                                # The path to the appfilter.xml file, change if necessary
  BASE_BRANCH: main                                                     # The base branch for the pull request, change if necessary
  PR_TITLE: Crowdsource Appfilter.xml                                        # The title of the pull request, change if necessary
  PR_BODY: Crowdsourced update of `appfilter.xml` via GitHub Action, applying blacklist filters.            # The body of the pull request, change if necessary
  OWNER: Arcticons-Team                                            # The owner of the repository, change if necessary
  BRANCH: crowdsource                                              # This branch will be created if it does not exist

jobs:
  check-pr:
    if : ${{ github.repository == vars.REPOSITORY }}
    runs-on: ubuntu-latest
    outputs:
      existsnot: ${{ steps.check.outputs.existsnot }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ env.BASE_BRANCH }}
          sparse-checkout: |
            .git

      - name: Check if PR exists
        id: check
        run: |
          if gh pr list -H "$BRANCH" -B "$BASE_BRANCH" --json number --jq '.[].number' | grep -q '[0-9]'; then
            echo "existsnot=false" >> "$GITHUB_OUTPUT"
          else
            echo "existsnot=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ env.BRANCH }}
          BASE_BRANCH: ${{ env.BASE_BRANCH }}

  update-pr:
    needs: check-pr
    if: needs.check-pr.outputs.existsnot == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ env.BASE_BRANCH }}
          sparse-checkout: |
            newicons/appfilter.xml
            .github/workflows/

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r .github/workflows/requirements.txt

      - name: Execute Python Script
        run: |
          python .github/workflows/crowdsource_appfilter/crowdsource.py 
          git add $APPFILTER_PATH
          git commit -m "Update appfilter.xml" || echo "No changes to commit"

      - name: Create or update branch
        run: |
          git fetch origin $BRANCH || true
          git branch -f $BRANCH
          git push origin $BRANCH --force

      - name: Create pull request
        run: |
          gh pr create -B "$BASE_BRANCH" -H "$OWNER:$BRANCH" --title "$PR_TITLE" --body "$PR_BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}